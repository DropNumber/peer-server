// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.RouteView = (function(_super) {

    __extends(RouteView, _super);

    function RouteView() {
      var _this = this;
      this.eventNameChange = function(event) {
        return RouteView.prototype.eventNameChange.apply(_this, arguments);
      };
      this.eventPathChange = function(event) {
        return RouteView.prototype.eventPathChange.apply(_this, arguments);
      };
      this.updateContents = function() {
        return RouteView.prototype.updateContents.apply(_this, arguments);
      };
      this.render = function() {
        return RouteView.prototype.render.apply(_this, arguments);
      };
      return RouteView.__super__.constructor.apply(this, arguments);
    }

    RouteView.prototype.initialize = function(options) {
      return this.tmplRoute = Handlebars.compile($("#route-template").html());
    };

    RouteView.prototype.events = {
      "keyup .path": "eventPathChange",
      "keyup .name": "eventNameChange"
    };

    RouteView.prototype.render = function() {
      var $code, $el, $name, $path;
      $el = $(this.el);
      $el.html(this.tmplRoute({
        name: this.model.get("name"),
        path: this.model.get("routePath"),
        functionParams: "abc, 123"
      }));
      $code = this.$(".code");
      $name = this.$(".name");
      $path = this.$(".path");
      $code.text(this.model.get("routeCode"));
      this.aceEditor = ace.edit($code[0]);
      this.aceEditor.setTheme("ace/theme/tomorrow_night_eighties");
      this.aceEditor.setFontSize("12px");
      this.aceEditor.getSession().setMode("ace/mode/javascript");
      this.aceEditor.on("change", this.updateContents);
      return this;
    };

    RouteView.prototype.updateContents = function() {
      return this.model.save("routeCode", this.aceEditor.getValue());
    };

    RouteView.prototype.eventPathChange = function(event) {
      var target;
      target = $(event.currentTarget);
      return this.model.save("routePath", target.val());
    };

    RouteView.prototype.eventNameChange = function(event) {
      var target;
      target = $(event.currentTarget);
      return this.model.save("name", target.val());
    };

    return RouteView;

  })(Backbone.View);

}).call(this);
