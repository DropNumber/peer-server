// Generated by CoffeeScript 1.6.1
(function() {
  'Tracks user-uploaded files, and their edit/production state.';
  var _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.ServerFileCollection = (function(_super) {

    __extends(ServerFileCollection, _super);

    function ServerFileCollection() {
      var _this = this;
      this.forEachDevelopmentFile = function(fn) {
        return ServerFileCollection.prototype.forEachDevelopmentFile.apply(_this, arguments);
      };
      this.createProductionVersion = function() {
        return ServerFileCollection.prototype.createProductionVersion.apply(_this, arguments);
      };
      this.getContents = function(filename) {
        return ServerFileCollection.prototype.getContents.apply(_this, arguments);
      };
      this.hasFile = function(filename) {
        return ServerFileCollection.prototype.hasFile.apply(_this, arguments);
      };
      this.comparator = function(serverFile) {
        return ServerFileCollection.prototype.comparator.apply(_this, arguments);
      };
      return ServerFileCollection.__super__.constructor.apply(this, arguments);
    }

    ServerFileCollection.prototype.model = ServerFile;

    ServerFileCollection.prototype.localStorage = new Backbone.LocalStorage("ServerFileCollection");

    ServerFileCollection.prototype.initialize = function() {};

    ServerFileCollection.prototype.comparator = function(serverFile) {
      return serverFile.get("name");
    };

    ServerFileCollection.prototype.getLandingPage = function() {
      var landingPage;
      landingPage = this.find(function(serverFile) {
        return serverFile.get("isLandingPage") && serverFile.get("isProductionVersion");
      });
      if (landingPage) {
        return {
          "fileContents": landingPage.get("contents"),
          "filename": landingPage.get("name"),
          "type": "text/html"
        };
      } else {
        return {
          "fileContents": "Under development... (set a landing page)",
          "filename": "404.html",
          "type": "text/html"
        };
      }
    };

    ServerFileCollection.prototype.hasFile = function(filename) {
      return this.findWhere({
        name: filename
      });
    };

    ServerFileCollection.prototype.getContents = function(filename) {
      var contents, serverFile;
      serverFile = this.findWhere({
        name: filename,
        isProductionVersion: true
      });
      contents = "";
      if (serverFile) {
        return contents = serverFile.get("contents");
      }
    };

    ServerFileCollection.prototype.createProductionVersion = function() {
      var developmentFiles, productionFiles,
        _this = this;
      productionFiles = this.where({
        isProductionVersion: true
      });
      _.each(productionFiles, function(serverFile) {
        return serverFile.destroy();
      });
      developmentFiles = this.where({
        isProductionVersion: false
      });
      return _.each(developmentFiles, function(serverFile) {
        var attrs, copy;
        attrs = _.clone(serverFile.attributes);
        attrs.id = null;
        copy = new ServerFile(attrs);
        copy.set("isProductionVersion", true);
        return _this.add(copy);
      });
    };

    ServerFileCollection.prototype.forEachDevelopmentFile = function(fn) {
      return this.each(function(serverFile) {
        if (!serverFile.get("isProductionVersion")) {
          return fn(serverFile);
        }
      });
    };

    return ServerFileCollection;

  })(Backbone.Collection);

}).call(this);
