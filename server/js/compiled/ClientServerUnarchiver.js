// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.ClientServerUnarchiver = (function() {
    function ClientServerUnarchiver(params) {
      this.addServerFile = __bind(this.addServerFile, this);
      this.addRoute = __bind(this.addRoute, this);
      this.processFile = __bind(this.processFile, this);
      var contents, database, developmentFiles, productionFiles, zip,
        _this = this;

      this.serverFileCollection = params.serverFileCollection;
      this.routeCollection = params.routeCollection;
      this.userDatabase = params.userDatabase;
      contents = params.contents;
      zip = new JSZip(contents);
      productionFiles = zip.filter(function(relativePath, file) {
        return /^live_version\/.+/.test(relativePath);
      });
      developmentFiles = zip.filter(function(relativePath, file) {
        return /^edited_version\/.+/.test(relativePath);
      });
      _.each(productionFiles, _.bind(this.processFile, this, true));
      _.each(developmentFiles, _.bind(this.processFile, this, false));
      database = zip.file("database.db");
      if (database) {
        this.userDatabase.fromJSONArray(database.data);
      }
    }

    ClientServerUnarchiver.prototype.processFile = function(isProductionVersion, file) {
      var contents, isRoute, name;

      name = file.name.replace(/^(live|edited)_version\//, "");
      contents = file.data;
      isRoute = /.+\.route\.js$/.test(name);
      if (isRoute) {
        return this.addRoute(name, contents, isProductionVersion);
      } else {
        return this.addServerFile(name, contents, isProductionVersion);
      }
    };

    ClientServerUnarchiver.prototype.addRoute = function(name, contents, isProductionVersion) {
      var route, routeCode, routePath;

      contents = JSON.parse(contents);
      name = name.replace(/\.route\.js$/, "");
      routePath = contents.routePath;
      routeCode = contents.routePath;
      route = new Route({
        name: name,
        routePath: routePath,
        routeCode: routeCode,
        isProductionVersion: isProductionVersion
      });
      this.routeCollection.add(route);
      return route.save();
    };

    ClientServerUnarchiver.prototype.addServerFile = function(name, contents, isProductionVersion) {
      var serverFile;

      serverFile = new ServerFile({
        name: name,
        contents: contents,
        isProductionVersion: isProductionVersion
      });
      this.serverFileCollection.add(serverFile);
      return serverFile.save();
    };

    return ClientServerUnarchiver;

  })();

}).call(this);
