// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.ClientServerDataChannel = (function(_super) {

    __extends(ClientServerDataChannel, _super);

    function ClientServerDataChannel() {
      this.onFileReceived = __bind(this.onFileReceived, this);

      this.onFileSent = __bind(this.onFileSent, this);

      this.onFileProgress = __bind(this.onFileProgress, this);

      this.onOpen = __bind(this.onOpen, this);

      this.onMessage = __bind(this.onMessage, this);

      this.dataChannelReady = __bind(this.dataChannelReady, this);
      ClientServerDataChannel.__super__.constructor.call(this);
      this.dataChannel.direction = "one-to-many";
    }

    ClientServerDataChannel.prototype.dataChannelReady = function() {
      return this.dataChannel.open(this.id);
    };

    ClientServerDataChannel.prototype.onMessage = function(data) {
      return console.log(data);
    };

    ClientServerDataChannel.prototype.onOpen = function() {
      this.dataChannel.send("SERVER: " + this.id);
      return console.log("onopen");
    };

    ClientServerDataChannel.prototype.onFileProgress = function() {};

    ClientServerDataChannel.prototype.onFileSent = function() {};

    ClientServerDataChannel.prototype.onFileReceived = function() {};

    return ClientServerDataChannel;

  })(ClientDataChannel);

}).call(this);
