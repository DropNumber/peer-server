// Generated by CoffeeScript 1.6.2
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.AJAXClient = (function() {
    function AJAXClient(sendEvent, socketIdFcn) {
      this.sendEvent = sendEvent;
      this.socketIdFcn = socketIdFcn;
      this.receiveAjax = __bind(this.receiveAjax, this);
      this.requestAjax = __bind(this.requestAjax, this);
      this.outstandingRequests = {};
    }

    AJAXClient.prototype.requestAjax = function(path, callback) {
      var data, requestId;

      console.log("sending ajax request for path: " + path + " on socket id " + this.socketIdFcn());
      requestId = Math.random().toString(36).substr(2, 10);
      if (typeof callback !== "undefined") {
        if (typeof callback !== "function") {
          throw "callback must be a function";
        }
        this.outstandingRequests[requestId] = {
          "callback": callback,
          "timestamp": new Date().getTime()
        };
      }
      data = {
        "path": path,
        "socketId": this.socketIdFcn(),
        "requestId": requestId
      };
      console.log("sending ajax request:");
      console.log(data);
      return this.sendEvent("requestAjax", data);
    };

    AJAXClient.prototype.receiveAjax = function(data) {
      var request;

      console.log("Received ajax response:" + data.requestId);
      console.log(data);
      if (!('requestId' in data)) {
        console.log("received AJAX response with no request ID");
        return;
      }
      if (!('contents' in data)) {
        console.log("received AJAX response with no contents");
        return;
      }
      request = this.outstandingRequests[data.requestId];
      delete this.outstandingRequests[data.requestId];
      if (typeof request === "undefined") {
        console.log("Got ajax response with no callback");
        return;
      }
      return request.callback(data['contents']);
    };

    return AJAXClient;

  })();

}).call(this);
