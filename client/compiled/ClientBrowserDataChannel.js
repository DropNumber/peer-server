// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this;

  window.ClientBrowserDataChannel = (function() {

    function ClientBrowserDataChannel(onMessageCallback, desiredServer) {
      var _this = this;
      this.onMessageCallback = onMessageCallback;
      this.desiredServer = desiredServer;
      this.send = function(data) {
        return ClientBrowserDataChannel.prototype.send.apply(_this, arguments);
      };
      this.onData = function(data) {
        return ClientBrowserDataChannel.prototype.onData.apply(_this, arguments);
      };
      this.onOpen = function(id) {
        return ClientBrowserDataChannel.prototype.onOpen.apply(_this, arguments);
      };
      if (isDevelopmentServer()) {
        this.peer = new Peer({
          host: location.hostname,
          port: 9000,
          config: {
            'iceServers': []
          }
        });
      } else {
        this.peer = new Peer({
          key: "rrvwvw4tuyxpqfr",
          config: {
            "iceServers": []
          }
        });
      }
      this.peer.on("open", this.onOpen);
    }

    ClientBrowserDataChannel.prototype.onOpen = function(id) {
      this.id = id;
      this.connection = this.peer.connect(this.desiredServer, {
        reliable: true
      });
      return this.connection.on("data", this.onData);
    };

    ClientBrowserDataChannel.prototype.onData = function(data) {
      return this.onMessageCallback(data);
    };

    ClientBrowserDataChannel.prototype.send = function(data) {
      return this.connection.send(data);
    };

    return ClientBrowserDataChannel;

  })();

}).call(this);
